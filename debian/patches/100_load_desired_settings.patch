diff -Nur -x '*.orig' -x '*~' gnome-desktop-2.25.3/libgnome-desktop/gnome-rr-config.c gnome-desktop-2.25.3-patched/libgnome-desktop/gnome-rr-config.c
--- gnome-desktop-2.25.3/libgnome-desktop/gnome-rr-config.c	2008-12-14 11:53:55.000000000 +0100
+++ gnome-desktop-2.25.3-patched/libgnome-desktop/gnome-rr-config.c	2008-12-16 16:38:15.000000000 +0100
@@ -34,6 +34,7 @@
 #include "edid.h"
 
 #define CONFIG_BASENAME "monitors.xml"
+#define CONFIG_DESIRED_BASENAME "monitors.xml.desired"
 
 /* In version 0 of the config file format, we had several <configuration>
  * toplevel elements and no explicit version number.  So, the filed looked
@@ -80,6 +81,10 @@
 static gchar *get_old_config_filename (void);
 static gchar *get_config_filename (void);
 
+static gboolean        gnome_rr_config_save_to_file (GnomeRRConfig *configuration,
+                       GError **err, gchar *filename);
+static void            remove_desired_settings      (void);
+
 typedef struct Parser Parser;
 
 /* Parser for monitor configurations */
@@ -915,6 +920,21 @@
     return result;
 }
 
+static GnomeRRConfig *
+gnome_rr_config_find (GnomeRRConfig **haystack,
+		    GnomeRRConfig  *needle)
+{
+    int i;
+
+    for (i = 0; haystack[i] != NULL; ++i)
+    {
+	if (gnome_rr_config_match (haystack[i], needle))
+	    return haystack[i];
+    }
+
+    return NULL;
+}
+
 /* Database management */
 
 static gchar *
@@ -924,11 +944,62 @@
 }
 
 static gchar *
+get_desired_config_filename (void)
+{
+    return g_build_filename (g_get_user_config_dir (), CONFIG_DESIRED_BASENAME, NULL);
+}
+
+static gchar *
 get_config_filename (void)
 {
     return g_build_filename (g_get_user_config_dir (), CONFIG_BASENAME, NULL);
 }
 
+static GnomeRRConfig **
+desired_configurations_read (GError **error)
+{
+    char *filename;
+    GnomeRRConfig **configs;
+    GError *err;
+
+    /* Try the desired configuration file... */
+
+    filename = get_desired_config_filename ();
+    
+    g_print("desired is = %s\n", filename);
+    
+    err = NULL;
+    
+    g_print("reading configuration...\n");
+    configs = configurations_read_from_file (filename, &err);
+
+    g_free (filename);
+    
+    g_print("done\n");
+    if (err)
+    {
+        if (g_error_matches (err, G_FILE_ERROR, G_FILE_ERROR_NOENT))
+        {
+            
+            g_print("error MATCHES");
+            g_error_free (err);
+            
+            /* Okay, so try the old configuration file */
+            filename = get_config_filename ();
+            configs = configurations_read_from_file (filename, error);
+            g_free (filename);
+        }
+        else
+        {
+            g_print("error does NOT MATCH");
+            g_propagate_error (error, err);
+        }
+    }
+    
+    return configs;
+}
+
+
 static const char *
 get_rotation_name (GnomeRRRotation r)
 {
@@ -1050,13 +1121,12 @@
 }
 
 
-gboolean
-gnome_rr_config_save (GnomeRRConfig *configuration, GError **error)
+static gboolean
+gnome_rr_config_save_to_file (GnomeRRConfig *configuration, GError **error, gchar *filename)
 {
     GnomeRRConfig **configurations;
     GString *output;
     int i;
-    gchar *filename;
     gboolean result;
 
     g_return_val_if_fail (configuration != NULL, FALSE);
@@ -1101,6 +1171,37 @@
     return result;
 }
 
+gboolean
+gnome_rr_config_save (GnomeRRConfig *configuration, GError **err)
+{
+    gchar *filename;
+    filename = get_config_filename ();
+    
+    return(gnome_rr_config_save_to_file(configuration, err, filename));
+}
+
+gboolean
+ubuntu_gnome_rr_config_save_desired (GnomeRRConfig *configuration, GError **err)
+{
+    gchar *filename;
+    filename = get_desired_config_filename ();
+    
+    return(gnome_rr_config_save_to_file(configuration, err, filename));
+}
+
+static void
+remove_desired_settings(void)
+{
+    gchar *filename;
+    filename = get_desired_config_filename ();
+    if (g_file_test (filename, G_FILE_TEST_EXISTS))
+        g_unlink (filename);
+
+    g_free (filename);
+
+}
+
+
 static GnomeRRConfig *
 gnome_rr_config_copy (GnomeRRConfig *config)
 {
@@ -1187,15 +1288,84 @@
     return result;
 }
 
+void
+ubuntu_compute_virtual_size_for_configuration (GnomeRRConfig *config, int *ret_width, int *ret_height)
+{
+    int i;
+    int width, height;
+
+    width = height = 0;
+
+    for (i = 0; config->outputs[i] != NULL; i++)
+    {
+	GnomeOutputInfo *output;
+
+	output = config->outputs[i];
+
+	if (output->on)
+	{
+	    width = MAX (width, output->x + output->width);
+	    height = MAX (height, output->y + output->height);
+	}
+    }
+
+    *ret_width = width;
+    *ret_height = height;
+}
+
+static gboolean
+check_framebuffer_size (GnomeRRConfig *config, GnomeRRScreen *screen)
+{
+    int req_width, req_height;
+    int min_width, max_width;
+    int min_height, max_height;
+    
+    /* Put the desired configuration 
+     * instead of app->current_configuration
+     */
+    ubuntu_compute_virtual_size_for_configuration (config, &req_width, &req_height);
+    
+    /* Put screen 
+     * instead of app->screen
+     */
+    gnome_rr_screen_get_ranges (screen, &min_width, &max_width, &min_height, &max_height);
+
+#if 0
+    g_print ("X Server supports:\n");
+    g_print ("min_width = %d, max_width = %d\n", min_width, max_width);
+    g_print ("min_height = %d, max_height = %d\n", min_height, max_height);
+
+    g_print ("Requesting size of %dx%d\n", req_width, req_height);
+#endif
+
+    if (!(min_width <= req_width && req_width <= max_width
+	  && min_height <= req_height && req_height <= max_height))
+        return FALSE;
+    else
+        return TRUE;
+}
+
 gboolean
 gnome_rr_config_apply_stored (GnomeRRScreen *screen, GError **error)
 {
     GnomeRRConfig *stored;
+    GnomeRRConfig **desired_configs;
+    GnomeRRConfig *desired_found;
+    gboolean result = TRUE;
     GError *my_error;
 
     g_return_val_if_fail (screen != NULL, FALSE);
     g_return_val_if_fail (error == NULL || *error == NULL, FALSE);
 
+    /* Look for the desired settings and try to load that
+     * instead.
+     * Then remove such settings.
+     * else read the usual configuration
+     */
+    
+    desired_configs = desired_configurations_read (NULL); /* NULL-GError */
+    
+
     my_error = NULL;
     if (!gnome_rr_screen_refresh (screen, &my_error)) {
 	    if (my_error) {
@@ -1208,12 +1378,52 @@
 
     stored = gnome_rr_config_new_stored (screen, error);
 
+    if (desired_configs)/* desired settings available */
+    {
+	if ((desired_found = gnome_rr_config_find (desired_configs, stored)))
+	{/* desired settings available and applicable */
+	    
+	    /* Check framebuffer size. Do not apply
+	     * the settings if the fb is not big
+	     * enough
+	     */
+	    if (check_framebuffer_size (desired_found, screen))
+	    {
+	        gnome_rr_config_apply (desired_found, screen, error);
+            
+            /* result's default value is TRUE therefore
+             * we set it to FALSE here (so that it's
+             * clear that the desired settings were
+             * applied) then, after the next check we
+             * set it to TRUE again. A bit confusing but
+             * there might be a reason behind having
+             * TRUE as result's default value.
+             */
+            result = FALSE;
+            /* Try to save the desired settings to the default
+             * settings file
+             */
+            GError *err = NULL;
+            gnome_rr_config_sanitize (desired_found);
+            gnome_rr_config_save (desired_found, &error);
+        }
+	}
+	
+	configurations_free (desired_configs);
+	remove_desired_settings();
+    }
+    
+    if (result)/* no desired settings */
+    {
     if (stored)
     {
 	gboolean result;
 
 	result = gnome_rr_config_apply (stored, screen, error);
-
+    }
+    else/* applied desired settings */
+        result = TRUE;
+    
 	gnome_rr_config_free (stored);
 	
 	return result;
diff -Nur -x '*.orig' -x '*~' gnome-desktop-2.25.3/libgnome-desktop/libgnomeui/gnome-rr-config.h gnome-desktop-2.25.3-patched/libgnome-desktop/libgnomeui/gnome-rr-config.h
--- gnome-desktop-2.25.3/libgnome-desktop/libgnomeui/gnome-rr-config.h	2008-12-14 11:53:55.000000000 +0100
+++ gnome-desktop-2.25.3-patched/libgnome-desktop/libgnomeui/gnome-rr-config.h	2008-12-16 15:39:56.000000000 +0100
@@ -92,6 +92,11 @@
 					      GnomeRRScreen  *screen,
 					      GError        **error);
 
+gboolean        ubuntu_gnome_rr_config_save_desired (GnomeRRConfig *configuration,
+                        GError **err);
+void            ubuntu_compute_virtual_size_for_configuration (GnomeRRConfig *config,
+                          int *ret_width, int *ret_height);
+                          
 /* A utility function that isn't really in the spirit of this file, but I don't
  * don't know a better place for it.
  */
