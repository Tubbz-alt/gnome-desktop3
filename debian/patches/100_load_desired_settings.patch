diff -Nur -x '*.orig' -x '*~' gnome-desktop-2.29.90/libgnome-desktop/gnome-rr-config.c gnome-desktop-2.29.90.new/libgnome-desktop/gnome-rr-config.c
--- gnome-desktop-2.29.90/libgnome-desktop/gnome-rr-config.c	2009-10-30 11:23:56.000000000 +0000
+++ gnome-desktop-2.29.90.new/libgnome-desktop/gnome-rr-config.c	2010-02-15 00:01:14.463252030 +0000
@@ -41,6 +41,7 @@
 
 #define CONFIG_INTENDED_BASENAME "monitors.xml"
 #define CONFIG_BACKUP_BASENAME "monitors.xml.backup"
+#define CONFIG_DESIRED_BASENAME "monitors.xml.desired"
 
 /* In version 0 of the config file format, we had several <configuration>
  * toplevel elements and no explicit version number.  So, the filed looked
@@ -85,6 +86,10 @@
 static void             output_free           (GnomeOutputInfo  *output);
 static GnomeOutputInfo *output_copy           (GnomeOutputInfo  *output);
 
+static gboolean        gnome_rr_config_save_to_file (GnomeRRConfig *configuration,
+                       GError **err, gchar *filename);
+static void            remove_desired_settings      (void);
+
 typedef struct Parser Parser;
 
 /* Parser for monitor configurations */
@@ -410,6 +415,16 @@
 	NULL, /* error */
     };
 
+	/* return NULL if the file doesn't exist */
+	if (!g_file_test (filename, G_FILE_TEST_EXISTS))
+    {
+	result = NULL;
+	g_set_error (error, G_FILE_ERROR, G_FILE_ERROR_NOENT,
+		     "No such file: %s", filename);	
+	return result;
+    }
+
+
     parser->config_file_version = 0;
     parser->configurations = g_ptr_array_new ();
     parser->outputs = g_ptr_array_new ();
@@ -916,6 +931,65 @@
     return g_build_filename (g_get_user_config_dir (), CONFIG_INTENDED_BASENAME, NULL);
 }
 
+static gchar *
+get_desired_config_filename (void)
+{
+    return g_build_filename (g_get_user_config_dir (), CONFIG_DESIRED_BASENAME, NULL);
+}
+
+static GnomeRRConfig **
+desired_configurations_read (GError **error)
+{
+    char *filename;
+    GnomeRRConfig **configs;
+    GError *err;
+
+    /* Try the desired configuration file... */
+
+    filename = get_desired_config_filename ();
+    
+#if 0
+    g_debug("desired is = %s\n", filename);
+#endif
+    err = NULL;
+
+#if 0
+    g_debug("reading configuration...\n");
+#endif
+    configs = configurations_read_from_file (filename, &err);
+
+    g_free (filename);
+    
+#if 0
+    g_debug("done\n");
+#endif
+    if (err)
+    {
+        if (g_error_matches (err, G_FILE_ERROR, G_FILE_ERROR_NOENT))
+        {
+            
+#if 0
+            g_debug("error MATCHES\n");
+#endif
+            g_error_free (err);
+            
+            /* Okay, so try the old configuration file */
+            filename = gnome_rr_config_get_intended_filename ();
+            configs = configurations_read_from_file (filename, error);
+            g_free (filename);
+        }
+        else
+        {
+#if 0
+            g_debug("error does NOT MATCH\n");
+#endif
+            g_propagate_error (error, err);
+        }
+    }
+    
+    return configs;
+}
+
 static const char *
 get_rotation_name (GnomeRRRotation r)
 {
@@ -1057,13 +1131,13 @@
 }
 
 
-gboolean
-gnome_rr_config_save (GnomeRRConfig *configuration, GError **error)
+static gboolean
+gnome_rr_config_save_to_file (GnomeRRConfig *configuration, GError **error, gchar *intended_filename)
 {
     GnomeRRConfig **configurations;
     GString *output;
     int i;
-    gchar *intended_filename;
+
     gchar *backup_filename;
     gboolean result;
 
@@ -1073,7 +1147,7 @@
     output = g_string_new ("");
 
     backup_filename = gnome_rr_config_get_backup_filename ();
-    intended_filename = gnome_rr_config_get_intended_filename ();
+
 
     configurations = configurations_read_from_file (intended_filename, NULL); /* NULL-GError */
     
@@ -1108,6 +1182,37 @@
     return result;
 }
 
+gboolean
+gnome_rr_config_save (GnomeRRConfig *configuration, GError **err)
+{
+    gchar *intended_filename;
+    intended_filename = gnome_rr_config_get_intended_filename ();
+    
+    return(gnome_rr_config_save_to_file(configuration, err, intended_filename));
+}
+
+gboolean
+ubuntu_gnome_rr_config_save_desired (GnomeRRConfig *configuration, GError **err)
+{
+    gchar *filename;
+    filename = get_desired_config_filename ();
+    
+    return(gnome_rr_config_save_to_file(configuration, err, filename));
+}
+
+static void
+remove_desired_settings(void)
+{
+    gchar *filename;
+    filename = get_desired_config_filename ();
+    if (g_file_test (filename, G_FILE_TEST_EXISTS))
+        g_unlink (filename);
+
+    g_free (filename);
+
+}
+
+
 static GnomeRRConfig *
 gnome_rr_config_copy (GnomeRRConfig *config)
 {
@@ -1127,7 +1232,7 @@
 }
 
 static GnomeRRConfig *
-config_new_stored (GnomeRRScreen *screen, const char *filename, GError **error)
+gnome_rr_desired_config_new_stored (GnomeRRScreen *screen, GError **error)
 {
     GnomeRRConfig *current;
     GnomeRRConfig **configs;
@@ -1138,7 +1243,7 @@
     
     current = gnome_rr_config_new_current (screen);
     
-    configs = configurations_read_from_file (filename, error);
+    configs = desired_configurations_read (error);
 
     result = NULL;
     if (configs)
@@ -1154,10 +1259,53 @@
 	    }
 	}
 
+	/*
 	if (result == NULL)
 	    g_set_error (error, GNOME_RR_ERROR, GNOME_RR_ERROR_NO_MATCHING_CONFIG,
 			 _("none of the saved display configurations matched the active configuration"));
+	*/
+
+	configurations_free (configs);
+    }
+
+    gnome_rr_config_free (current);
+    
+    return result;
+}
+
+
+static GnomeRRConfig *
+config_new_stored (GnomeRRScreen *screen, const char *filename, GError **error)
+{
+    GnomeRRConfig *current;
+    GnomeRRConfig **configs;
+    GnomeRRConfig *result;
 
+    g_return_val_if_fail (screen != NULL, NULL);
+    g_return_val_if_fail (error == NULL || *error == NULL, NULL);
+    
+    current = gnome_rr_config_new_current (screen);
+    
+    configs = configurations_read_from_file (filename, error);
+
+    result = NULL;
+    if (configs)
+    {
+	int i;
+	
+	for (i = 0; configs[i] != NULL; ++i)
+	{
+	    if (gnome_rr_config_match (configs[i], current))
+	    {
+		result = gnome_rr_config_copy (configs[i]);
+		break;
+	    }
+	}
+    /*
+	if (result == NULL)
+	    g_set_error (error, GNOME_RR_ERROR, GNOME_RR_ERROR_NO_MATCHING_CONFIG,
+			 _("none of the saved display configurations matched the active configuration"));
+    */
 	configurations_free (configs);
     }
 
@@ -1191,6 +1339,65 @@
 }
 #endif
 
+
+void
+ubuntu_compute_virtual_size_for_configuration (GnomeRRConfig *config, int *ret_width, int *ret_height)
+{
+    int i;
+    int width, height;
+
+    width = height = 0;
+
+    for (i = 0; config->outputs[i] != NULL; i++)
+    {
+	GnomeOutputInfo *output;
+
+	output = config->outputs[i];
+
+	if (output->on)
+	{
+	    width = MAX (width, output->x + output->width);
+	    height = MAX (height, output->y + output->height);
+	}
+    }
+
+    *ret_width = width;
+    *ret_height = height;
+}
+
+static gboolean
+check_framebuffer_size (GnomeRRConfig *config, GnomeRRScreen *screen)
+{
+    int req_width, req_height;
+    int min_width, max_width;
+    int min_height, max_height;
+    
+    /* Put the desired configuration 
+     * instead of app->current_configuration
+     */
+    ubuntu_compute_virtual_size_for_configuration (config, &req_width, &req_height);
+    
+    /* Put screen 
+     * instead of app->screen
+     */
+    gnome_rr_screen_get_ranges (screen, &min_width, &max_width, &min_height, &max_height);
+
+#if 0
+    g_debug ("X Server supports:\n");
+    g_debug ("min_width = %d, max_width = %d\n", min_width, max_width);
+    g_debug ("min_height = %d, max_height = %d\n", min_height, max_height);
+
+    g_debug ("Requesting size of %dx%d\n", req_width, req_height);
+#endif
+
+    if (!(min_width <= req_width && req_width <= max_width
+	  && min_height <= req_height && req_height <= max_height))
+        return FALSE;
+    else
+        return TRUE;
+}
+
+
 gboolean
 gnome_rr_config_apply_with_time (GnomeRRConfig *config,
 				 GnomeRRScreen *screen,
@@ -1324,6 +1531,7 @@
 gnome_rr_config_apply_from_filename_with_time (GnomeRRScreen *screen, const char *filename, guint32 timestamp, GError **error)
 {
     GnomeRRConfig *stored;
+    gboolean is_desired = FALSE;
     GError *my_error;
 
     g_return_val_if_fail (screen != NULL, FALSE);
@@ -1340,22 +1548,71 @@
 	    /* This means the screen didn't change, so just proceed */
     }
 
-    stored = config_new_stored (screen, filename, error);
-
-    if (stored)
-    {
-	gboolean result;
-
-	result = gnome_rr_config_apply_with_time (stored, screen, timestamp, error);
+    /* Look for the desired settings and try to load that
+     * instead.
+     * Then remove such settings.
+     * else read the usual configuration
+     */
+    gchar *desired_filename;
+    desired_filename = get_desired_config_filename ();
+    
+    /* If the desired file exists */
+    if ((g_file_test(desired_filename, G_FILE_TEST_EXISTS))) {
+        stored = gnome_rr_desired_config_new_stored (screen, NULL);
+        
+        /* If the desired file can't be applied */
+        if (!stored) {
+            stored = gnome_rr_config_new_stored (screen, error);
+        }
+        else {
+            /* the desired file is valid and 
+               can be applied */
+            is_desired = TRUE;
+        }
+    }
+    /* If the desired file does not exist */
+    else {
+        stored = config_new_stored (screen, filename, error);
+    }
 
-	gnome_rr_config_free (stored);
-	
-	return result;
+    /* remove desired */
+	remove_desired_settings();
+	
+    if (stored) {
+    	gboolean result = FALSE;
+        
+        /* Check framebuffer size. Do not apply
+	     * the settings if the fb is not big
+	     * enough
+	     */
+        if (check_framebuffer_size (stored, screen)) {
+        
+        	result = gnome_rr_config_apply_with_time (stored, screen, timestamp, error);
+
+        	/* if we are using the desired settings and
+        	   the settings were applied successfully */
+        	if (is_desired && result) {
+                /* Try to save the desired settings to the default
+                 * settings file
+                 */
+                g_clear_error (error);
+                gnome_rr_config_sanitize (stored);
+                result = gnome_rr_config_save (stored, error);
+        	}
+    	
+    	} else {
+		g_set_error (error, GNOME_RR_ERROR, GNOME_RR_ERROR_UNKNOWN,
+				"X server does not support size requested");
+	}
+    	
+    	gnome_rr_config_free (stored);
+    	
+    	return result;
     }
-    else
-    {
-	return FALSE;
+    else {
+	    return FALSE;
     }
+
 }
 
 /*
diff -Nur -x '*.orig' -x '*~' gnome-desktop-2.29.90/libgnome-desktop/libgnomeui/gnome-rr-config.h gnome-desktop-2.29.90.new/libgnome-desktop/libgnomeui/gnome-rr-config.h
--- gnome-desktop-2.29.90/libgnome-desktop/libgnomeui/gnome-rr-config.h	2009-08-19 19:13:53.000000000 +0100
+++ gnome-desktop-2.29.90.new/libgnome-desktop/libgnomeui/gnome-rr-config.h	2010-02-14 23:58:02.013254194 +0000
@@ -123,6 +123,11 @@
 char *gnome_rr_config_get_backup_filename (void);
 char *gnome_rr_config_get_intended_filename (void);
 
+gboolean        ubuntu_gnome_rr_config_save_desired (GnomeRRConfig *configuration,
+                        GError **err);
+void            ubuntu_compute_virtual_size_for_configuration (GnomeRRConfig *config,
+                          int *ret_width, int *ret_height);
+          
 /* A utility function that isn't really in the spirit of this file, but I don't
  * don't know a better place for it.
  */
